{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","api/comments.ts","components/PostDetails/PostDetails.tsx","App.tsx","api/posts.ts","index.tsx"],"names":["PostsList","posts","loadPost","selctedPostId","className","map","post","userId","title","type","onClick","id","BASE_URL","NewCommentForm","postId","useState","name","setName","email","setEmail","body","setBody","useEffect","onSubmit","event","comment","preventDefault","fetch","method","headers","JSON","stringify","then","response","json","value","onChange","target","placeholder","required","PostDetails","comments","setComments","hideComment","sethideComment","responseComments","length","App","startPostValue","setPosts","setPost","loadPosts","getUserPosts","htmlFor","Number","getPostDetails","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e4df101.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  loadPost: (id: number) => void,\n  selctedPostId: number | null,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  loadPost,\n  selctedPostId = 0,\n}) => (\n\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>\n              User\n              #\n              {post.userId}\n              :\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => loadPost(post.id)}\n          >\n            {selctedPostId === post.id ? 'Close' : 'Open'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import React, { useEffect, useState } from 'react';\nimport { addPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ postId }) => {\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [body, setBody] = useState<string>('');\n\n  const onSubmitForm: React.FormEventHandler = (event) => {\n    event.preventDefault();\n    addPostComments({\n      name,\n      email,\n      body,\n      postId,\n    });\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  useEffect(() => {\n    setName('');\n    setEmail('');\n    setBody('');\n  }, [postId]);\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={onSubmitForm}>\n      <div className=\"form-field\">\n        <input\n          value={name}\n          name={name}\n          onChange={event => setName(event.target.value)}\n          type=\"text\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={email}\n          name={email}\n          onChange={event => setEmail(event.target.value)}\n          type=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={body}\n          onChange={event => setBody(event.target.value)}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport function getPostComments(postId: number) {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => response.json())\n    .then(comments => comments);\n}\n\nexport function deletePostComments(id: number) {\n  return fetch(`${BASE_URL}/comments/${id}`, {\n    method: 'DELETE',\n  })\n    .then(response => response.json());\n}\n\nexport function addPostComments(comment: Partial<CommentList>) {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  })\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { getPostComments, deletePostComments } from '../../api/comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  post: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [comments, setComments] = useState<CommentList[]>([]);\n  const [hideComment, sethideComment] = useState<boolean>(true);\n\n  useEffect(() => {\n    getPostComments(post.id)\n      .then(responseComments => setComments(responseComments));\n  }, [comments]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => sethideComment(!hideComment)}\n        >\n          Hide\n          {' '}\n          {comments.length}\n          {' '}\n          comments\n        </button>\n        {hideComment && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deletePostComments(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={post.id} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPostDetails, getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const startPostValue = {\n    id: 0,\n    title: '',\n    userId: 0,\n    body: '',\n  };\n\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [post, setPost] = useState<Post>(startPostValue);\n\n  const loadPosts = (userId: number) => {\n    getUserPosts(userId).then(response => setPosts(response));\n  };\n\n  const loadPost = (id: number) => {\n    if (post?.id !== id) {\n      getPostDetails(id).then(response => setPost(response));\n    }\n\n    setPost(startPostValue);\n  };\n\n  useEffect(() => {\n    loadPosts(0);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"first-name\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => (loadPosts(Number(event.target.value)))}\n            name=\"select\"\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            loadPost={loadPost}\n            selctedPostId={post.id}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {post.id ? <PostDetails post={post} /> : 'Please celect post'}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId: number): Promise<Post[]> {\n  return fetch(`${BASE_URL}/posts${userId ? `?userId=${userId}` : ''}`)\n    .then(response => response.json())\n    .then(posts => posts);\n}\n\nexport function getPostDetails(id: number): Promise<Post> {\n  return fetch(`${BASE_URL}/posts/${id}`)\n    .then(response => response.json())\n    .then(post => post);\n}\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}